From c6220fdd4987a8daebc96d5cda84a9fb8b4ca7f4 Mon Sep 17 00:00:00 2001
From: Charles Stevens <cstevens@beaconembedded.com>
Date: Mon, 24 Jan 2022 15:01:49 -0600
Subject: [PATCH] Modify to support Beacon EmbeddedWorks development kits. For
 RZ/G2 SoCs H, M and N

Signed-off-by: Charles Stevens <cstevens@beaconembedded.com>
---
 ddr/lpddr4/boot_init_dram_config-preset.c | 267 ++-------------------
 ddr/lpddr4/boot_init_dram_config.h        |   2 +-
 dgmodul4.c                                |   2 +-
 makefile                                  |   6 +-
 makefile.linaro                           | 276 ----------------------
 5 files changed, 21 insertions(+), 532 deletions(-)
 delete mode 100644 makefile.linaro

diff --git a/ddr/lpddr4/boot_init_dram_config-preset.c b/ddr/lpddr4/boot_init_dram_config-preset.c
index 600d1f3..73b49f8 100644
--- a/ddr/lpddr4/boot_init_dram_config-preset.c
+++ b/ddr/lpddr4/boot_init_dram_config-preset.c
@@ -28,30 +28,15 @@ uint32_t boardcnf_get_brd_type(void)
 	Prr_Product = reg & PRR_PRODUCT_MASK;
 	if (Prr_Product == PRR_PRODUCT_G2M)
 	{
-		if (RZG2M_CUT_11 == (reg & PRR_CUT_MASK))
-		{
-			judge = 1;	/* 2rank setting	*/
-		}
-		else
-		{
-			boardInfo = mmio_read_32(GPIO_INDT5);
-			if (boardInfo & LPDDR4_2RANK)
-			{
-				judge = 1;	/* 2rank setting	*/
-			}
-			else
-			{
-				judge = 0;	/* 1rank setting	*/
-			}
-		}
+			judge = 0;	/* 1rank setting	*/
 	}
 	else if (Prr_Product == PRR_PRODUCT_G2N)
 	{
-		judge = 3;
+		judge = 1;
 	}
 	else if (Prr_Product == PRR_PRODUCT_G2H)
 	{
-		judge = 5;	/* 1rank setting	*/
+		judge = 2;	/* 1rank setting	*/
 	}
 	return (judge);
 }
@@ -59,12 +44,12 @@ uint32_t boardcnf_get_brd_type(void)
 
 const struct _boardcnf __attribute__((weak)) boardcnfs[BOARDNUM] = {
 /*
- * boardcnf[0] Jiangsu HopeRun Software Co., Ltd. HiHope RZ/G2M board 16Gbit/1rank/2ch board with G2M/SOC
+ * boardcnf[0] Beacon EmbeddedWorks RZ/G2M Development Kit with 16Gbit/1rank/2ch SOM with G2M/SOC (4 GiB)
  */
 {
 	0x03,		/* phyvalid */
 	0x01,		/* dbi_en */
-	0x02c0,		/* cacs_dly */
+	0x0320,		/* cacs_dly */
 	0,		/* cacs_dly_adj */
 	0x0300,		/* dqdm_dly_w */
 	0x00a0,		/* dqdm_dly_r */
@@ -73,7 +58,7 @@ const struct _boardcnf __attribute__((weak)) boardcnfs[BOARDNUM] = {
 /*ddr_density[]*/	{ 0x04, 0xff },
 /*ca_swap*/		0x00345201,
 /*dqs_swap*/		0x3201,
-/*dq_swap[]*/		{ 0x01672543, 0x45361207, 0x45632107, 0x60715234 },
+/*dq_swap[]*/		{ 0x23617540, 0x54061237, 0x43251607, 0x71605243 },
 /*dm_swap[]*/		{ 0x08, 0x08, 0x08, 0x08 },
 /*wdqlvl_patt[]*/	WDQLVL_PAT,
 /*cacs_adj*/		{ 0, 0, 0, 0, 0, 0, 0, 0,
@@ -93,60 +78,7 @@ const struct _boardcnf __attribute__((weak)) boardcnfs[BOARDNUM] = {
 /*ddr_density[]*/	{ 0x04, 0xff },
 /*ca_swap*/		0x00302154,
 /*dqs_swap*/		0x2310,
-/*dq_swap[]*/		{ 0x01672543, 0x45361207, 0x45632107, 0x60715234 },
-/*dm_swap[]*/		{ 0x08, 0x08, 0x08, 0x08 },
-/*wdqlvl_patt[]*/	WDQLVL_PAT,
-/*cacs_adj*/		{ 0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0 },
-/*dm_adj_w*/		{ 0, 0, 0, 0 },
-/*dqdm_adj_w*/		{ 0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0 },
-/*dm_adj_r*/		{ 0, 0, 0, 0 },
-/*dqdm_adj_r*/		{ 0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0 }
-		}
-	}
-},
-/*
- * boardcnf[1] Jiangsu HopeRun Software Co., Ltd. HiHope RZ/G2M board 8Gbit/2rank/2ch board with G2M/SOC
- */
-{
-	0x03,		/* phyvalid */
-	0x01,		/* dbi_en */
-	0x02c0,		/* cacs_dly */
-	0,		/* cacs_dly_adj */
-	0x0300,		/* dqdm_dly_w */
-	0x00a0,		/* dqdm_dly_r */
-	{
-/*ch[0]*/	{
-/*ddr_density[]*/	{ 0x02, 0x02 },
-/*ca_swap*/		0x00345201,
-/*dqs_swap*/		0x3201,
-/*dq_swap[]*/		{ 0x01672543, 0x45361207, 0x45632107, 0x60715234 },
-/*dm_swap[]*/		{ 0x08, 0x08, 0x08, 0x08 },
-/*wdqlvl_patt[]*/	WDQLVL_PAT,
-/*cacs_adj*/		{ 0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0 },
-/*dm_adj_w*/		{ 0, 0, 0, 0 },
-/*dqdm_adj_w*/		{ 0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0 },
-/*dm_adj_r*/		{ 0, 0, 0, 0 },
-/*dqdm_adj_r*/		{ 0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0 }
-		},
-/*ch[1]*/	{
-/*ddr_density[]*/	{ 0x02, 0x02 },
-/*ca_swap*/		0x00302154,
-/*dqs_swap*/		0x2310,
-/*dq_swap[]*/		{ 0x01672543, 0x45361207, 0x45632107, 0x60715234 },
+/*dq_swap[]*/		{ 0x26015734, 0x04531276, 0x43251607, 0x10647532 },
 /*dm_swap[]*/		{ 0x08, 0x08, 0x08, 0x08 },
 /*wdqlvl_patt[]*/	WDQLVL_PAT,
 /*cacs_adj*/		{ 0, 0, 0, 0, 0, 0, 0, 0,
@@ -165,7 +97,7 @@ const struct _boardcnf __attribute__((weak)) boardcnfs[BOARDNUM] = {
 	}
 },
 /*
- * boardcnf[2] Jiangsu HopeRun Software Co., Ltd. HiHope RZ/G2N board 8Gbit/2rank/1ch board with G2N/SOC
+ * boardcnf[1] Beacon EmbeddedWorks RZ/G2N Development Kit with 16Gbit/1rank/1ch SOM with G2N/SOC (2 GiB)
  */
 {
 	0x01,		/* phyvalid */
@@ -176,10 +108,10 @@ const struct _boardcnf __attribute__((weak)) boardcnfs[BOARDNUM] = {
 	0x00a0,		/* dqdm_dly_r */
 	{
 /*ch[0]*/	{
-/*ddr_density[]*/	{ 0x02, 0x02 },
+/*ddr_density[]*/	{ 0x04, 0xff },
 /*ca_swap*/		0x00345201,
 /*dqs_swap*/		0x3201,
-/*dq_swap[]*/		{ 0x01672543, 0x45361207, 0x45632107, 0x60715234 },
+/*dq_swap[]*/		{ 0x23617540, 0x54061237, 0x43251607, 0x71605243 },
 /*dm_swap[]*/		{ 0x08, 0x08, 0x08, 0x08 },
 /*wdqlvl_patt[]*/	WDQLVL_PAT,
 /*cacs_adj*/		{ 0, 0, 0, 0, 0, 0, 0, 0,
@@ -198,138 +130,12 @@ const struct _boardcnf __attribute__((weak)) boardcnfs[BOARDNUM] = {
 	}
 },
 /*
- * boardcnf[3] Jiangsu HopeRun Software Co., Ltd. HiHope RZ/G2N board 16Gbit/2rank/1ch board with G2N/SOC
+ * boardcnf[2] Beacon EmbeddedWorks RZ/G2H Development Kit with 16Gbit/1rank/2ch SOM with G2H/SOC (4 GiB)
  */
 {
 	0x01,		/* phyvalid */
 	0x01,		/* dbi_en */
-	0x0300,		/* cacs_dly */
-	0,		/* cacs_dly_adj */
-	0x0300,		/* dqdm_dly_w */
-	0x00a0,		/* dqdm_dly_r */
-	{
-/*ch[0]*/	{
-/*ddr_density[]*/	{ 0x04, 0x04 },
-/*ca_swap*/		0x00345201,
-/*dqs_swap*/		0x3201,
-/*dq_swap[]*/		{ 0x01672543, 0x45361207, 0x45632107, 0x60715234 },
-/*dm_swap[]*/		{ 0x08, 0x08, 0x08, 0x08 },
-/*wdqlvl_patt[]*/	WDQLVL_PAT,
-/*cacs_adj*/		{ 0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0 },
-/*dm_adj_w*/		{ 0, 0, 0, 0 },
-/*dqdm_adj_w*/		{ 0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0 },
-/*dm_adj_r*/		{ 0, 0, 0, 0 },
-/*dqdm_adj_r*/		{ 0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0 }
-		}
-	}
-},
-/*
- * boardcnf[4] Jiangsu HopeRun Software Co., Ltd. HiHope RZ/G2H board 8Gbit/2rank/2ch board with G2M/SOC
- */
-{
-	0x05,		/* phyvalid */
-	0x01,		/* dbi_en */
-	0x0300,		/* cacs_dly */
-	0,		/* cacs_dly_adj */
-	0x0300,		/* dqdm_dly_w */
-	0x00a0,		/* dqdm_dly_r */
-	{
-/*ch[0]*/	{
-/*ddr_density[]*/	{ 0x02, 0x02 },
-/*ca_swap*/		0x00345201,
-/*dqs_swap*/		0x3201,
-/*dq_swap[]*/		{ 0x01672543, 0x45367012, 0x45632107, 0x60715234 },
-/*dm_swap[]*/		{ 0x08, 0x08, 0x08, 0x08 },
-/*wdqlvl_patt[]*/	WDQLVL_PAT,
-/*cacs_adj*/		{ 0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0 },
-/*dm_adj_w*/		{ 0, 0, 0, 0 },
-/*dqdm_adj_w*/		{ 0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0 },
-/*dm_adj_r*/		{ 0, 0, 0, 0 },
-/*dqdm_adj_r*/		{ 0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0 }
-		},
-/*ch[1]*/	{	// for DRAM_SPLIT_2CH
-/*ddr_density[]*/	{ 0x02, 0x02 },
-/*ca_swap*/		0x00302154,
-/*dqs_swap*/		0x2310,
-/*dq_swap[]*/		{ 0x01672543, 0x45361207, 0x45632107, 0x60715234 },
-/*dm_swap[]*/		{ 0x08, 0x08, 0x08, 0x08 },
-/*wdqlvl_patt[]*/	WDQLVL_PAT,
-/*cacs_adj*/		{ 0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0 },
-/*dm_adj_w*/		{ 0, 0, 0, 0 },
-/*dqdm_adj_w*/		{ 0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0 },
-/*dm_adj_r*/		{ 0, 0, 0, 0 },
-/*dqdm_adj_r*/		{ 0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0 }
-		},
-/*ch[2]*/	{	// for DRAM_SPLIT_NON
-/*ddr_density[]*/	{ 0x02, 0x02 },
-/*ca_swap*/		0x00302154,
-/*dqs_swap*/		0x2310,
-/*dq_swap[]*/		{ 0x01672543, 0x45361207, 0x45632107, 0x60715234 },
-/*dm_swap[]*/		{ 0x08, 0x08, 0x08, 0x08 },
-/*wdqlvl_patt[]*/	WDQLVL_PAT,
-/*cacs_adj*/		{ 0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0 },
-/*dm_adj_w*/		{ 0, 0, 0, 0 },
-/*dqdm_adj_w*/		{ 0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0 },
-/*dm_adj_r*/		{ 0, 0, 0, 0 },
-/*dqdm_adj_r*/		{ 0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0 }
-		},
-/*ch[3]*/	{ // Dummy
-/*ddr_density[]*/	{ 0xff, 0xff },
-/*ca_swap*/		0,
-/*dqs_swap*/		0,
-/*dq_swap[]*/		{ 0, 0, 0, 0 },
-/*dm_swap[]*/		{ 0, 0, 0, 0 },
-/*wdqlvl_patt[]*/	WDQLVL_PAT,
-/*cacs_adj*/		{ 0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0 },
-/*dm_adj_w*/		{ 0, 0, 0, 0 },
-/*dqdm_adj_w*/		{ 0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0 },
-/*dm_adj_r*/		{ 0, 0, 0, 0 },
-/*dqdm_adj_r*/		{ 0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0 }
-		}
-	}
-},
-/*
- * boardcnf[5] Jiangsu HopeRun Software Co., Ltd. HiHope RZ/G2H board 16Gbit/1rank/2ch board with G2H/SOC
- */
-{
-	0x05,		/* phyvalid */
-	0x01,		/* dbi_en */
-	0x0300,		/* cacs_dly */
+	0x0320,		/* cacs_dly */
 	0,		/* cacs_dly_adj */
 	0x0300,		/* dqdm_dly_w */
 	0x00a0,		/* dqdm_dly_r */
@@ -338,27 +144,7 @@ const struct _boardcnf __attribute__((weak)) boardcnfs[BOARDNUM] = {
 /*ddr_density[]*/	{ 0x04, 0xff },
 /*ca_swap*/		0x00345201,
 /*dqs_swap*/		0x3201,
-/*dq_swap[]*/		{ 0x01672543, 0x45367012, 0x45632107, 0x60715234 },
-/*dm_swap[]*/		{ 0x08, 0x08, 0x08, 0x08 },
-/*wdqlvl_patt[]*/	WDQLVL_PAT,
-/*cacs_adj*/		{ 0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0 },
-/*dm_adj_w*/		{ 0, 0, 0, 0 },
-/*dqdm_adj_w*/		{ 0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0 },
-/*dm_adj_r*/		{ 0, 0, 0, 0 },
-/*dqdm_adj_r*/		{ 0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0 }
-		},
-/*ch[1]*/	{	// for DRAM_SPLIT_2CH
-/*ddr_density[]*/	{ 0x04, 0xff },
-/*ca_swap*/		0x00302154,
-/*dqs_swap*/		0x2310,
-/*dq_swap[]*/		{ 0x01672543, 0x45361207, 0x45632107, 0x60715234 },
+/*dq_swap[]*/		{ 0x23617540, 0x54067312, 0x43251607, 0x71605243 },
 /*dm_swap[]*/		{ 0x08, 0x08, 0x08, 0x08 },
 /*wdqlvl_patt[]*/	WDQLVL_PAT,
 /*cacs_adj*/		{ 0, 0, 0, 0, 0, 0, 0, 0,
@@ -374,35 +160,14 @@ const struct _boardcnf __attribute__((weak)) boardcnfs[BOARDNUM] = {
 			  0, 0, 0, 0, 0, 0, 0, 0,
 			  0, 0, 0, 0, 0, 0, 0, 0 }
 		},
-/*ch[2]*/	{	// for DRAM_SPLIT_NON
+/*ch[1]*/	{
 /*ddr_density[]*/	{ 0x04, 0xff },
 /*ca_swap*/		0x00302154,
 /*dqs_swap*/		0x2310,
-/*dq_swap[]*/		{ 0x01672543, 0x45361207, 0x45632107, 0x60715234 },
+/*dq_swap[]*/		{ 0x26015734, 0x04531276, 0x43251607, 0x10647532 },
 /*dm_swap[]*/		{ 0x08, 0x08, 0x08, 0x08 },
 /*wdqlvl_patt[]*/	WDQLVL_PAT,
-/*cacs_adj*/		{ 0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0 },
-/*dm_adj_w*/		{ 0, 0, 0, 0 },
-/*dqdm_adj_w*/		{ 0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0 },
-/*dm_adj_r*/		{ 0, 0, 0, 0 },
-/*dqdm_adj_r*/		{ 0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0, 0, 0, 0, 0, 0, 0 }
-		},
-/*ch[3]*/	{ // Dummy
-/*ddr_density[]*/	{ 0xff, 0xff },
-/*ca_swap*/		0,
-/*dqs_swap*/		0,
-/*dq_swap[]*/		{ 0, 0, 0, 0 },
-/*dm_swap[]*/		{ 0, 0, 0, 0 },
-/*wdqlvl_patt[]*/	WDQLVL_PAT,
-/*cacs_adj*/		{ 0, 0, 0, 0, 0, 0, 0, 0,
-			  0, 0 },
+/*cacs_adj*/		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
 /*dm_adj_w*/		{ 0, 0, 0, 0 },
 /*dqdm_adj_w*/		{ 0, 0, 0, 0, 0, 0, 0, 0,
 			  0, 0, 0, 0, 0, 0, 0, 0,
diff --git a/ddr/lpddr4/boot_init_dram_config.h b/ddr/lpddr4/boot_init_dram_config.h
index 03d5f7a..b2b771a 100644
--- a/ddr/lpddr4/boot_init_dram_config.h
+++ b/ddr/lpddr4/boot_init_dram_config.h
@@ -4,7 +4,7 @@
  * SPDX-License-Identifier: BSD-3-Clause
  */
 
-#define BOARDNUM 6
+#define BOARDNUM 3
 
 /*******************************************************************************
  *	BOARD CONFIGRATION
diff --git a/dgmodul4.c b/dgmodul4.c
index ddef91c..22ae898 100644
--- a/dgmodul4.c
+++ b/dgmodul4.c
@@ -680,7 +680,7 @@ void XLoadSpiflash0_2(uint32_t mode)
 	}
 	// WorkMemory CLEAR (Write H'FF)
 	PutStr("Work RAM(H'50000000-H'53FFFFFF) Clear....",1);
-	FillData32Bit((uint32_t *)Load_workStartAdd,(uint32_t *)Load_workEndAdd,0xFFFFFFFF);
+	FillData32Bit((uint32_t *)Load_workStartAdd,(uint32_t *)Load_workEndAdd,0x0);
 
 	if (0U == mode)
 	{
diff --git a/makefile b/makefile
index 21935c0..a1c57b5 100644
--- a/makefile
+++ b/makefile
@@ -30,7 +30,7 @@
 
 #/* Select BOARD("HIHOPE"or"EK874" )**************
 ifeq ("$(BOARD)", "")
-BOARD = HIHOPE
+BOARD = BEACON
 endif
 
 #/* Select USB("ENABLE"or"DISABLE" )********************************************
@@ -80,8 +80,8 @@ ifeq ("$(BOARD)", "EK874")
 	FILENAME_ADD = _ek874
 	CFLAGS += -DRZG2_EK874=1
 else
-	BOARD_NAME   =  HIHOPE
-	FILENAME_ADD = _hihope
+	BOARD_NAME   =  BEACON
+	FILENAME_ADD = _beacon
 	CFLAGS += -DRZG2_HIHOPE=1
 endif
 
diff --git a/makefile.linaro b/makefile.linaro
deleted file mode 100644
index 4bd6ff6..0000000
--- a/makefile.linaro
+++ /dev/null
@@ -1,276 +0,0 @@
-#
-# Copyright (c) 2015-2019, Renesas Electronics Corporation. All rights reserved.
-#
-# Redistribution and use in source and binary forms, with or without
-# modification, are permitted provided that the following conditions are met:
-#
-# Redistributions of source code must retain the above copyright notice, this
-# list of conditions and the following disclaimer.
-#
-# Redistributions in binary form must reproduce the above copyright notice,
-# this list of conditions and the following disclaimer in the documentation
-# and/or other materials provided with the distribution.
-#
-# Neither the name of ARM nor the names of its contributors may be used
-# to endorse or promote products derived from this software without specific
-# prior written permission.
-#
-# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
-# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
-# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
-# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
-# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
-# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
-# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
-# POSSIBILITY OF SUCH DAMAGE.
-#
-
-#/* Select BOARD("HIHOPE"or"EK874" )**************
-ifeq ("$(BOARD)", "")
-BOARD = HIHOPE
-endif
-
-#/* Select USB("ENABLE"or"DISABLE" )********************************************
-ifeq ("$(USB)", "")
-ifeq ("$(BOARD)", "EK874")
-USB = DISABLE
-else
-USB = ENABLE
-endif
-endif
-
-#/* Select BOOT("WRITER"or"WRITER_WITH_CERT" )*************************
-ifeq ("$(BOOT)", "")
-BOOT = WRITER_WITH_CERT
-endif
-
-#/* Select SERIAL_FLASH("ENABLE"or"DISABLE" )***********************************
-ifeq ("$(SERIAL_FLASH)", "")
-SERIAL_FLASH = ENABLE
-endif
-
-#/* Select EMMC("ENABLE"or"DISABLE" )*******************************************
-ifeq ("$(EMMC)", "")
-ifeq ("$(BOARD)", "EK874")
-EMMC = DISABLE
-else
-EMMC = ENABLE
-endif
-endif
-
-#CPU
-CPU     = 
-AArch   = 64
-THUMB   = 
-AS_NEON = 
-CC_NEON = -mgeneral-regs-only
-ALIGN   = -mstrict-align
-AArch32_64  = AArch64
-BOOTDIR     = AArch64_boot
-OUTPUT_DIR  = AArch64_output
-OBJECT_DIR  = AArch64_obj
-CROSS_COMPILE ?= aarch64-elf-
-CFLAGS = -fno-stack-protector
-
-ifeq ("$(BOARD)", "EK874")
-	BOARD_NAME   =  EK874
-	FILENAME_ADD = _ek874
-	CFLAGS += -DRZG2_EK874=1
-else
-	BOARD_NAME   =  HIHOPE
-	FILENAME_ADD = _hihope
-	CFLAGS += -DRZG2_HIHOPE=1
-endif
-
-ifeq ("$(BOOT)", "WRITER")
-	BOOT_DEF    = Writer
-	FILE_NAME   = $(OUTPUT_DIR)/AArch$(AArch)_Flash_writer_SCIF_E6304000$(FILENAME_ADD)
-ifeq ("$(BOARD)", "EK874")
-	MEMORY_DEF = memory_writer_small.def
-else
-	MEMORY_DEF = memory_writer.def
-endif
-endif
-
-ifeq ("$(BOOT)", "WRITER_WITH_CERT")
-	BOOT_DEF    = Writer
-	FILE_NAME   = $(OUTPUT_DIR)/AArch$(AArch)_Flash_writer_SCIF_DUMMY_CERT_E6300400$(FILENAME_ADD)
-ifeq ("$(BOARD)", "EK874")
-	MEMORY_DEF  = memory_writer_small_with_cert.def
-else
-	MEMORY_DEF  = memory_writer_with_cert.def
-endif
-endif
-
-ifeq ("$(USB)", "ENABLE")
-        CFLAGS += -DUSB_ENABLE=1
-endif
-
-ifeq ("$(USB)", "DISABLE")
-        CFLAGS += -DUSB_ENABLE=0
-endif
-
-ifeq ("$(SERIAL_FLASH)", "ENABLE")
-	CFLAGS += -DSERIAL_FLASH=1
-else
-	CFLAGS += -DSERIAL_FLASH=0
-endif
-
-ifeq ("$(EMMC)", "ENABLE")
-	CFLAGS += -DEMMC=1
-else
-	CFLAGS += -DEMMC=0
-endif
-
-DDR_DEF = ddr_qos_init_setting
-
-LIBS        = -L$(subst libc.a, ,$(shell $(CC) -print-file-name=libc.a 2> /dev/null)) -lc
-LIBS        += -L$(subst libgcc.a, ,$(shell $(CC) -print-libgcc-file-name 2> /dev/null)) -lgcc
-ifeq ("$(USB)", "ENABLE")
-LIBS        += -L./AArch64_lib/ -lusb
-endif
-
-INCLUDE_DIR = include
-DDR_DIR = ddr
-TOOL_DEF = "REWRITE_TOOL"
-
-OUTPUT_FILE = $(FILE_NAME).axf
-
-#Object file
-OBJ_FILE_BOOT =					\
-	$(OBJECT_DIR)/boot_mon.o		\
-	$(OBJECT_DIR)/stack.o
-
-SRC_FILE :=					\
-	main.c					\
-	init_scif.c				\
-	scifdrv.c				\
-	devdrv.c				\
-	common.c				\
-	dgtable.c				\
-	dgmodul1.c				\
-	Message.c				\
-	dmaspi.c				\
-	ramckmdl.c				\
-	cpudrv.c				\
-	boardid.c				\
-	boot_init_lbsc.c			\
-	boot_init_port.c			\
-	boot_init_gpio.c			\
-	micro_wait.c				\
-	ddrcheck.c
-
-ifeq ("$(SERIAL_FLASH)", "ENABLE")
-SRC_FILE +=					\
-	dgmodul4.c				\
-	rpcqspidrv.c				\
-	spiflash1drv.c
-endif
-
-ifeq ("$(EMMC)", "ENABLE")
-SRC_FILE +=					\
-	dg_emmc_config.c			\
-	dg_emmc_access.c			\
-	emmc_cmd.c				\
-	emmc_init.c				\
-	emmc_interrupt.c			\
-	emmc_mount.c				\
-	emmc_write.c				\
-	emmc_erase.c				\
-	emmc_utility.c
-endif
-
-ifeq ("$(BOOT)", "WRITER_WITH_CERT")
-	SRC_FILE += cert_param.c
-endif
-
-ifeq ("$(BOARD)", "EK874")
-include ddr/ddr3l/ddr.mk
-else
-include ddr/lpddr4/ddr.mk
-endif
-
-OBJ_FILE := $(addprefix $(OBJECT_DIR)/,$(patsubst %.c,%.o,$(SRC_FILE)))
-
-#Dependency File
-DEPEND_FILE = $(patsubst %.lib, ,$(OBJ_FILE:%.o=%.d))
-
-###################################################
-#C compiler
-CC = $(CROSS_COMPILE)gcc
-#Assembler
-AS = $(CROSS_COMPILE)as
-#Linker
-LD = $(CROSS_COMPILE)ld
-#Liblary
-AR = $(CROSS_COMPILE)ar
-#Object dump
-OBJDMP = $(CROSS_COMPILE)objdump
-#Object copy
-OBJCOPY = $(CROSS_COMPILE)objcopy
-
-#clean
-CL = rm -rf
-
-###################################################
-# Suffixes
-.SUFFIXES : .s .c .o
-
-###################################################
-# Command
-
-.PHONY: all
-all: $(OBJECT_DIR) $(OUTPUT_DIR) $(OBJ_FILE_BOOT) $(OBJ_FILE) $(OUTPUT_FILE)
-
-#------------------------------------------
-# Make Directory
-#------------------------------------------
-$(OBJECT_DIR):
-	-mkdir "$(OBJECT_DIR)"
-
-$(OUTPUT_DIR):
-	-mkdir "$(OUTPUT_DIR)"
-
-#------------------------------------------
-# Compile
-#------------------------------------------
-$(OBJECT_DIR)/%.o:$(BOOTDIR)/%.s
-	$(AS)  -g $(CPU) $(AS_NEON) --MD $(patsubst %.o,%.d,$@) -I $(BOOTDIR) -I $(INCLUDE_DIR) -I $(DDR_DIR) $< -o $@ --defsym $(AArch32_64)=0 --defsym $(BOOT_DEF)=0 --defsym $(TOOL_DEF)=0
-
-$(OBJECT_DIR)/%.o:%.c
-	@if [ ! -e `dirname $@` ]; then mkdir -p `dirname $@`; fi
-	$(CC) -g -Os $(ALIGN) $(CPU) $(CC_NEON) $(THUMB) -MMD -MP -c -I $(BOOTDIR) -I $(INCLUDE_DIR) -I $(DDR_DIR) $< -o $@ -D$(AArch32_64)=0 -D$(BOOT_DEF)=0 -D$(TOOL_DEF)=0 $(CFLAGS) -D$(DDR_DEF)=0
-
-#------------------------------------------
-# Linker
-#------------------------------------------
-$(OUTPUT_FILE): $(OBJ_FILE_BOOT) $(OBJ_FILE) $(MEMORY_DEF)
-	$(LD) $(OBJ_FILE_BOOT) $(OBJ_FILE) 	\
-	-T '$(MEMORY_DEF)'			\
-	-o '$(OUTPUT_FILE)'			\
-	-Map '$(FILE_NAME).map' 		\
-	-static					\
-	$(LIBS)
-
-#   Make MOT file
-	$(OBJCOPY) -O srec --srec-forceS3 "$(OUTPUT_FILE)" "$(FILE_NAME).mot"
-
-#   Make Binary file
-	$(OBJCOPY) -O binary "$(OUTPUT_FILE)" "$(FILE_NAME).bin"
-
-#   Dis assemble
-	$(OBJDMP) -d -S "$(OUTPUT_FILE)" > "$(FILE_NAME)_disasm.txt"
-
-#	Time Stamp
-	@echo ==========  %date% %time%  ==========
-	@echo ========== !!! Compile Complete !!! ==========
-
-
-.PHONY: clean
-clean:
-	$(CL)  $(OBJECT_DIR)/* $(OUTPUT_DIR)/*
-
--include $(DEPEND_FILE)
-- 
2.17.1

