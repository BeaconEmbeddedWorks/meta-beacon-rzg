From 7f1c6d7cc3ce69cc35ff833eae0714d10081f307 Mon Sep 17 00:00:00 2001
From: Adam Ford <aford173@gmail.com>
Date: Mon, 21 Jun 2021 11:18:59 -0500
Subject: [PATCH 1/2] plat:rzg: Add support for Beacon RZ/G2M SOM

The SOM has 4GB of non-ECC DDR.  Enable it, support the Lossy compression
and keep the QSPI unlocked for being able to read/write ATF in U-Boot.

Build with the following invocations:

RZ/G2M:
make rzg bl2 bl31 PLAT=rzg RZG_LOSSY_ENABLE=1 LSI=G2M RZG_DRAM_SPLIT=0 \
     RZG_DRAM_ECC=0 SPD="none" LIFEC_DBSC_PROTECT_ENABLE=0 \
     RZG_RPC_HYPERFLASH_LOCKED=0 MBEDTLS_DIR=../mbedtls \
     CROSS_COMPILE=aarch64-linux-gnu- BOARD=BEACON

RZ/G2N:
make rzg bl2 bl31 PLAT=rzg RZG_LOSSY_ENABLE=1 LSI=G2N RZG_DRAM_SPLIT=0 \
         RZG_DRAM_ECC=0 SPD="none" LIFEC_DBSC_PROTECT_ENABLE=0 \
         RZG_RPC_HYPERFLASH_LOCKED=0 MBEDTLS_DIR=../mbedtls \
         CROSS_COMPILE=aarch64-linux-gnu- BOARD=BEACON

RZ/G2H:
make rzg bl2 bl31 PLAT=rzg RZG_LOSSY_ENABLE=1 LSI=G2H RZG_DRAM_SPLIT=0 \
         RZG_DRAM_ECC=0 SPD="none" LIFEC_DBSC_PROTECT_ENABLE=0 \
         RZG_RPC_HYPERFLASH_LOCKED=0 MBEDTLS_DIR=../mbedtls \
         CROSS_COMPILE=aarch64-linux-gnu- BOARD=BEACON

Signed-off-by: Adam Ford <aford@beaconembedded.com>
---
 .../common/ddr/ddr_b/boot_init_dram_config.c  | 188 +++++++++++++++++-
 drivers/renesas/rzg/board/board.c             |  18 ++
 drivers/renesas/rzg/board/board.h             |   3 +
 plat/renesas/rzg/bl2_plat_setup.c             |  15 ++
 plat/renesas/rzg/platform.mk                  |   5 +
 5 files changed, 228 insertions(+), 1 deletion(-)

diff --git a/drivers/renesas/common/ddr/ddr_b/boot_init_dram_config.c b/drivers/renesas/common/ddr/ddr_b/boot_init_dram_config.c
index 45b6b088c..04fe64f59 100644
--- a/drivers/renesas/common/ddr/ddr_b/boot_init_dram_config.c
+++ b/drivers/renesas/common/ddr/ddr_b/boot_init_dram_config.c
@@ -10,7 +10,7 @@
 #endif
 
 #if (RZG_SOC == 1)
-#define BOARDNUM 4
+#define BOARDNUM 7
 #else
 #define BOARDNUM 22
 #endif /* RZG_SOC == 1 */
@@ -291,6 +291,180 @@ static const struct _boardcnf boardcnfs[BOARDNUM] = {
 			}
 		}
 	},
+/* boardcnf[4] Beacon Embedded G2M/SOC */
+	{
+	 0x03,
+	 0x01,
+	 0x0320,
+	 0,
+	 0x0300,
+	 0x00a0,
+	{
+	{
+		{0x04, 0xff},
+		 0x00345201,
+		 0x3201,
+		{0x23617540, 0x54061237, 0x43251607, 0x71605243},
+		{0x08, 0x08, 0x08, 0x08},
+		WDQLVL_PAT,
+		{0, 0, 0, 0, 0, 0, 0, 0,
+		 0, 0},
+		{0, 0, 0, 0},
+		{0, 0, 0, 0, 0, 0, 0, 0,
+		 0, 0, 0, 0, 0, 0, 0, 0,
+		 0, 0, 0, 0, 0, 0, 0, 0,
+		 0, 0, 0, 0, 0, 0, 0, 0},
+		{0, 0, 0, 0},
+		{0, 0, 0, 0, 0, 0, 0, 0,
+		 0, 0, 0, 0, 0, 0, 0, 0,
+		 0, 0, 0, 0, 0, 0, 0, 0,
+		 0, 0, 0, 0, 0, 0, 0, 0}
+		},
+	{
+		{0x04, 0xff},
+		 0x00302154,
+		 0x2310,
+		{0x26015734, 0x04531276, 0x43251607, 0x10647532},
+		{0x08, 0x08, 0x08, 0x08},
+		WDQLVL_PAT,
+		{0, 0, 0, 0, 0, 0, 0, 0,
+		 0, 0},
+		{0, 0, 0, 0},
+		{0, 0, 0, 0, 0, 0, 0, 0,
+		 0, 0, 0, 0, 0, 0, 0, 0,
+		 0, 0, 0, 0, 0, 0, 0, 0,
+		 0, 0, 0, 0, 0, 0, 0, 0},
+		{0, 0, 0, 0},
+		{0, 0, 0, 0, 0, 0, 0, 0,
+		 0, 0, 0, 0, 0, 0, 0, 0,
+		 0, 0, 0, 0, 0, 0, 0, 0,
+		 0, 0, 0, 0, 0, 0, 0, 0}
+	}
+	}
+	},
+/* boardcnf[5] Beacon Embedded G2N/SOC */
+{
+	0x01,
+	0x01,
+	0x0320,
+	0,
+	0x0300,
+	0x00a0,
+	{
+	{
+	   {0x04, 0xff},
+	   0x00345201,
+	   0x3201,
+	   {0x23617540, 0x54061237, 0x43251607, 0x71605243},
+	   {0x08, 0x08, 0x08, 0x08},
+	   WDQLVL_PAT,
+	   {0, 0, 0, 0, 0, 0, 0, 0,
+	    0, 0},
+	   {0, 0, 0, 0},
+	   {0, 0, 0, 0, 0, 0, 0, 0,
+	    0, 0, 0, 0, 0, 0, 0, 0,
+	    0, 0, 0, 0, 0, 0, 0, 0,
+	    0, 0, 0, 0, 0, 0, 0, 0},
+	   {0, 0, 0, 0},
+	   {0, 0, 0, 0, 0, 0, 0, 0,
+	    0, 0, 0, 0, 0, 0, 0, 0,
+	    0, 0, 0, 0, 0, 0, 0, 0,
+	    0, 0, 0, 0, 0, 0, 0, 0}
+	   },
+
+	}
+	},
+/* boardcnf[6] Beacon Embedded G2H/SOC */
+{
+	0x05,
+	0x01,
+	0x0320,
+	0,
+	0x0300,
+	0x00a0,
+	{
+	{
+	   {0x04, 0xff},
+	   0x00345201,
+	   0x3201,
+	   {0x23617540, 0x54067312, 0x43251607, 0x71605243},
+	   {0x08, 0x08, 0x08, 0x08},
+	   WDQLVL_PAT,
+	   {0, 0, 0, 0, 0, 0, 0, 0,
+	    0, 0},
+	   {0, 0, 0, 0},
+	   {0, 0, 0, 0, 0, 0, 0, 0,
+	    0, 0, 0, 0, 0, 0, 0, 0,
+	    0, 0, 0, 0, 0, 0, 0, 0,
+	    0, 0, 0, 0, 0, 0, 0, 0},
+	   {0, 0, 0, 0},
+	   {0, 0, 0, 0, 0, 0, 0, 0,
+	    0, 0, 0, 0, 0, 0, 0, 0,
+	    0, 0, 0, 0, 0, 0, 0, 0,
+	    0, 0, 0, 0, 0, 0, 0, 0}
+	},
+	{
+	   {0x04, 0xff},
+	    0x00302154,
+	    0x2310,
+	   {0x26015734, 0x04531276, 0x43251607, 0x10647532},
+	   {0x08, 0x08, 0x08, 0x08},
+	   WDQLVL_PAT,
+	   {0, 0, 0, 0, 0, 0, 0, 0,
+	    0, 0},
+	   {0, 0, 0, 0 },
+	   {0, 0, 0, 0, 0, 0, 0, 0,
+	    0, 0, 0, 0, 0, 0, 0, 0,
+	    0, 0, 0, 0, 0, 0, 0, 0,
+	    0, 0, 0, 0, 0, 0, 0, 0},
+	   {0, 0, 0, 0},
+	   {0, 0, 0, 0, 0, 0, 0, 0,
+	    0, 0, 0, 0, 0, 0, 0, 0,
+	    0, 0, 0, 0, 0, 0, 0, 0,
+	    0, 0, 0, 0, 0, 0, 0, 0}
+	   },
+	{
+	   {0x04, 0xff},
+	    0x00302154,
+	    0x2310,
+	   {0x26015734, 0x04531276, 0x43251607, 0x10647532},
+	   {0x08, 0x08, 0x08, 0x08},
+	   WDQLVL_PAT,
+	   {0, 0, 0, 0, 0, 0, 0, 0,
+	    0, 0},
+	   {0, 0, 0, 0},
+	   {0, 0, 0, 0, 0, 0, 0, 0,
+	    0, 0, 0, 0, 0, 0, 0, 0,
+	    0, 0, 0, 0, 0, 0, 0, 0,
+	    0, 0, 0, 0, 0, 0, 0, 0},
+	   {0, 0, 0, 0},
+	   {0, 0, 0, 0, 0, 0, 0, 0,
+	    0, 0, 0, 0, 0, 0, 0, 0,
+	    0, 0, 0, 0, 0, 0, 0, 0,
+	    0, 0, 0, 0, 0, 0, 0, 0}
+	},
+	{
+	   {0xff, 0xff},
+	    0,
+	    0,
+	   {0, 0, 0, 0},
+	   {0, 0, 0, 0},
+	   WDQLVL_PAT,
+	   {0, 0, 0, 0, 0, 0, 0, 0,
+	    0, 0},
+	   {0, 0, 0, 0},
+	   {0, 0, 0, 0, 0, 0, 0, 0,
+	    0, 0, 0, 0, 0, 0, 0, 0,
+	    0, 0, 0, 0, 0, 0, 0, 0,
+	    0, 0, 0, 0, 0, 0, 0, 0},
+	   {0, 0, 0, 0},
+	   {0, 0, 0, 0, 0, 0, 0, 0,
+	    0, 0, 0, 0, 0, 0, 0, 0,
+	    0, 0, 0, 0, 0, 0, 0, 0,
+	    0, 0, 0, 0, 0, 0, 0, 0}
+	}
+	}
+	},
 };
 #else
 static const struct _boardcnf boardcnfs[BOARDNUM] = {
@@ -1946,18 +2120,30 @@ static uint32_t rzg2_board_judge(void)
 
 	switch (prr_product) {
 	case PRR_PRODUCT_M3:
+#if (BOARD == BEACON)
+		brd = 4;
+#else
 		brd = 1U;
 		if ((mmio_read_32(PRR) & PRR_CUT_MASK) != RCAR_M3_CUT_VER11) {
 			if ((mmio_read_32(GPIO_INDT5) & LPDDR4_2RANK) == 0U) {
 				brd = 0U;
 			}
 		}
+#endif
 		break;
 	case PRR_PRODUCT_H3:
+#if (BOARD == BEACON)
+		brd = 6;
+#else
 		brd = 2U;
+#endif
 		break;
 	case PRR_PRODUCT_M3N:
+#if (BOARD == BEACON)
+		brd = 5;
+#else
 		brd = 3U;
+#endif
 		break;
 	default:
 		brd = 99U;
diff --git a/drivers/renesas/rzg/board/board.c b/drivers/renesas/rzg/board/board.c
index 08beb5dc5..9d7c2565c 100644
--- a/drivers/renesas/rzg/board/board.c
+++ b/drivers/renesas/rzg/board/board.c
@@ -14,13 +14,25 @@
 
 #ifndef BOARD_DEFAULT
 #if (RCAR_LSI == RZ_G2H)
+#if (BOARD == BEACON)
+#define BOARD_DEFAULT		(BOARD_BEACON_RZG2H << BOARD_CODE_SHIFT)
+#else
 #define BOARD_DEFAULT		(BOARD_HIHOPE_RZ_G2H << BOARD_CODE_SHIFT)
+#endif
 #elif (RCAR_LSI == RZ_G2N)
+#if (BOARD == BEACON)
+#define BOARD_DEFAULT		(BOARD_BEACON_RZG2N << BOARD_CODE_SHIFT)
+#else
 #define BOARD_DEFAULT		(BOARD_HIHOPE_RZ_G2N << BOARD_CODE_SHIFT)
+#endif
 #elif (RCAR_LSI == RZ_G2E)
 #define BOARD_DEFAULT		(BOARD_EK874_RZ_G2E << BOARD_CODE_SHIFT)
 #else
+#if (BOARD == BEACON)
+#define BOARD_DEFAULT		(BOARD_BEACON_RZG2N << BOARD_CODE_SHIFT)
+#else
 #define BOARD_DEFAULT		(BOARD_HIHOPE_RZ_G2M << BOARD_CODE_SHIFT)
+#endif
 #endif /* RCAR_LSI == RZ_G2H */
 #endif /* BOARD_DEFAULT */
 
@@ -48,6 +60,9 @@ const char *g_board_tbl[] = {
 	[BOARD_HIHOPE_RZ_G2H] = "HiHope RZ/G2H",
 	[BOARD_HIHOPE_RZ_G2N] = "HiHope RZ/G2N",
 	[BOARD_EK874_RZ_G2E] = "EK874 RZ/G2E",
+	[BOARD_BEACON_RZG2M]	= "Beacon RZ/G2M",
+	[BOARD_BEACON_RZG2N]	= "Beacon RZ/G2N",
+	[BOARD_BEACON_RZG2H]	= "Beacon RZ/G2H",
 	[BOARD_UNKNOWN] = "unknown"
 };
 
@@ -58,6 +73,9 @@ void rzg_get_board_type(uint32_t *type, uint32_t *rev)
 		[BOARD_HIHOPE_RZ_G2M] = HM_ID,
 		[BOARD_HIHOPE_RZ_G2H] = HH_ID,
 		[BOARD_HIHOPE_RZ_G2N] = HN_ID,
+		[BOARD_BEACON_RZG2M] = HM_ID,
+		[BOARD_BEACON_RZG2N] = HN_ID,
+		[BOARD_BEACON_RZG2H] = HH_ID,
 		[BOARD_EK874_RZ_G2E] = EK_ID,
 	};
 	uint32_t reg;
diff --git a/drivers/renesas/rzg/board/board.h b/drivers/renesas/rzg/board/board.h
index 1a768490c..cd2592f33 100644
--- a/drivers/renesas/rzg/board/board.h
+++ b/drivers/renesas/rzg/board/board.h
@@ -12,6 +12,9 @@ enum rzg2_board_id {
 	BOARD_HIHOPE_RZ_G2H,
 	BOARD_HIHOPE_RZ_G2N,
 	BOARD_EK874_RZ_G2E,
+	BOARD_BEACON_RZG2M,
+	BOARD_BEACON_RZG2N,
+	BOARD_BEACON_RZG2H,
 	BOARD_UNKNOWN
 };
 
diff --git a/plat/renesas/rzg/bl2_plat_setup.c b/plat/renesas/rzg/bl2_plat_setup.c
index 7cb857b6e..667cabc0b 100644
--- a/plat/renesas/rzg/bl2_plat_setup.c
+++ b/plat/renesas/rzg/bl2_plat_setup.c
@@ -447,6 +447,18 @@ static void bl2_populate_compatible_string(void *dt)
 		ret = fdt_setprop_string(dt, 0, "compatible",
 					 "hoperun,hihope-rzg2n");
 		break;
+	case BOARD_BEACON_RZG2M:
+		ret = fdt_setprop_string(dt, 0, "compatible",
+					 "beacon,som-rzg2m");
+		break;
+	case BOARD_BEACON_RZG2N:
+		ret = fdt_setprop_string(dt, 0, "compatible",
+					 "beacon,som-rzg2n");
+		break;
+	case BOARD_BEACON_RZG2H:
+		ret = fdt_setprop_string(dt, 0, "compatible",
+					 "beacon,som-rzg2h");
+		break;
 	case BOARD_EK874_RZ_G2E:
 		ret = fdt_setprop_string(dt, 0, "compatible",
 					 "si-linux,cat874");
@@ -779,6 +791,9 @@ void bl2_el3_early_platform_setup(u_register_t arg1, u_register_t arg2,
 	case BOARD_HIHOPE_RZ_G2M:
 	case BOARD_HIHOPE_RZ_G2H:
 	case BOARD_HIHOPE_RZ_G2N:
+	case BOARD_BEACON_RZG2M:
+	case BOARD_BEACON_RZG2N:
+	case BOARD_BEACON_RZG2H:
 	case BOARD_EK874_RZ_G2E:
 		break;
 	default:
diff --git a/plat/renesas/rzg/platform.mk b/plat/renesas/rzg/platform.mk
index 8bb518b85..7168f7019 100644
--- a/plat/renesas/rzg/platform.mk
+++ b/plat/renesas/rzg/platform.mk
@@ -220,6 +220,11 @@ $(eval $(call add_define,RCAR_SYSTEM_RESET_KEEPON_DDR))
 RZG_SOC :=1
 $(eval $(call add_define,RZG_SOC))
 
+#Process BOARD_DEFAULT
+ifdef BOARD
+$(eval $(call add_define,BOARD))
+endif
+
 # Process RZG_DRAM_ECC flag
 ifndef RZG_DRAM_ECC
 RZG_DRAM_ECC :=0
-- 
2.17.1

